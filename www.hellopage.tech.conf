# the upstream component nginx needs to connect to
upstream hp {
    server unix://var/www/www.hellopage.tech/hp.sock; # for a file socket
}

# Redirect http to https
server {
    listen          80;
    server_name     hellopage.tech www.hellopage.tech;
    rewrite ^/(.*)  https://www.hellopage.tech/$1 permanent;
}

# non-www to www
server {
    listen 443 ssl;
    server_name hellopage.tech;
    ssl_certificate /etc/letsencrypt/live/hellopage.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hellopage.tech/privkey.pem;
    return 301 https://www.hellopage.tech$request_uri;
}
# configuration of the server
server {
    # the port your site will be served on
    listen      443 ssl http2;
    listen      [::]:443 ssl http2;

    # the domain name or IP to serve for
    server_name www.hellopage.tech;

    #if ($host = 'hellopage.tech') {
    #  return 301 https://www.hellopage.tech$request_uri;
    #}

    charset utf-8;
    # max upload size; adjust to taste
    client_max_body_size 25M;

    ssl_certificate         /etc/letsencrypt/live/hellopage.tech/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/hellopage.tech/privkey.pem;

    # Django media file
    location /media {
        alias /var/www/www.hellopage.tech/media;
    }
    # Django static file
    location /static {
        alias /var/www/www.hellopage.tech/static;
    }
     #For favicon
    location  /favicon.ico {
       alias /var/www/www.hellopage.tech/static/favicon.ico;
    }

     #For well-known
    location  /.well-known {
       alias /var/www/www.hellopage.tech/.well-known;
    }

    # Finally, send all non-static/media requests to Django.
    location / {
        uwsgi_pass hp;
        include /etc/nginx/uwsgi_params;
    }
}